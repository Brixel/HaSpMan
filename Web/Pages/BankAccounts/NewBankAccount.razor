@page "/bankaccounts/new"
@attribute [Authorize]

@using Commands.Handlers.BankAccount.AddBankAccount
@inject IMediator _mediator
@inject IMapper _mapper
@inject ISnackbar Snackbar
@inject NavigationManager NavManager

<h1 class="my-6">Add new bankaccount</h1>

<EditForm Model="@_newBankAccount"
          OnInvalidSubmit="@ShowError"
          OnValidSubmit="@AddBankAccount">
    <DataAnnotationsValidator />

    <BankAccountForm BankAccount="@_newBankAccount" />

    <MudItem Class="d-flex justify-start" xs="12">
        <MudButton ButtonType="ButtonType.Submit"
                   Class="my-8"
                   Color="Color.Primary"
                   DropShadow="false"
                   Size="Size.Large"
                   Variant="Variant.Filled">
            Add bankaccount
        </MudButton>
    </MudItem>
</EditForm>

@code {
    private Models.BankAccountForm _newBankAccount = new();

    private async Task AddBankAccount()
    {
        var command = _mapper.Map<AddBankAccountCommand>(_newBankAccount);
        var response = await _mediator.Send(command);
        Snackbar.Clear();
        Snackbar.Add($"Bankaccount {_newBankAccount.Name} added successfully!", Severity.Success);
        NavManager.NavigateTo("/bankaccounts");
    }

    private void ShowError()
    {
        Snackbar.Clear();
        Snackbar.Add("Please correct all errors on the form", Severity.Error);
    }

}