@page "/financialyears"
@attribute [Authorize]
@using Commands.Handlers.FinancialYear.AddFinancialYear;
@using Queries.FinancialYears
@using Commands.Handlers.FinancialYear.CloseFinancialYear

@inject IMediator _mediator
@inject ISnackbar Snackbar
@inject IDialogService DialogService

<MudTable Class="mt-10 mw-9"
          Dense="true"
          Hover="true"
          @ref="table"
          ServerData="ServerReload">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Financial years</MudText>
        <MudSpacer />
        <MudButton Class="ma-2" Color="Color.Primary" DropShadow="false" OnClick="@AddFinancialYear" Size="Size.Small"
                   Variant="Variant.Filled">
            Add Financial Year
        </MudButton>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>
            Name
        </MudTh>
        <MudTh>
            Start date
        </MudTh>
        <MudTh>
            End date
        </MudTh>
        <MudTh>
            Is closed
        </MudTh>
        <MudTh>
            Actions
        </MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="StartDate">@context.StartDateTimeOffset.Date.ToString("dd-MM-yyyy")</MudTd>
        <MudTd DataLabel="EndDate">@context.EndDateTimeOffset.Date.ToString("dd-MM-yyyy")</MudTd>
        <MudTd DataLabel="IsClosed">@context.IsClosed</MudTd>
        <MudTd>
            <MudGrid >
                <MudItem xs="6">
                    <MudTooltip Text="Close">
                        <MudIconButton aria-label="Close"
                            Icon="@Icons.Material.Filled.Lock" OnClick="() => CloseFinancialYear(context)"
                            Disabled="@context.IsClosed">
                        </MudIconButton>
                    </MudTooltip>
                </MudItem>
            </MudGrid>
        </MudTd>
    </RowTemplate>
    <NoRecordsContent>
        <MudText>No matching records found</MudText>
    </NoRecordsContent>
    <LoadingContent>
        <MudText>Loading...</MudText>
    </LoadingContent>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    private MudTable<FinancialYear>? table;

    private async Task<TableData<FinancialYear>> ServerReload(TableState state, CancellationToken cancellationToken)
    {
        StateHasChanged();

        var query = new GetFinancialYearsQuery();
        var data = await _mediator.Send(query, cancellationToken);

        return new TableData<FinancialYear>()
        {
            TotalItems = data.Count,
            Items = data
        };
    }

    private void OnSearch(string text)
    {
        table?.ReloadServerData();
    }

    private async Task CloseFinancialYear(FinancialYear financialYear)
    {
        var options = new DialogOptions { };
        var parameters = new DialogParameters()
        {
            ["financialYear"] = financialYear
        };
        var reference = await DialogService.ShowAsync<CloseFinancialYearDialog>($"Close financial year", parameters, options);
        var dialog = await reference.Result;
        if (dialog is { Canceled: false })
        {
            Snackbar.Clear();
            Snackbar.Add($"Closed financial year {financialYear.StartDateTimeOffset.Year} - {financialYear.EndDateTimeOffset.Year}");
            table?.ReloadServerData();
        }
    }

    private async Task AddFinancialYear()
    {
        await _mediator.Send(new AddFinancialYearCommand());
        table?.ReloadServerData();
    }
}