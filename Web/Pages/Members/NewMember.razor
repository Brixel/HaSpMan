@page "/members/new"
@attribute [Authorize]

@using Commands
@using MediatR
@using AutoMapper
@inject IMediator _mediator
@inject IMapper _mapper
@inject ISnackbar Snackbar
@inject NavigationManager NavManager

<h1 class="my-6">Add new member</h1>

<EditForm Model="@_newMember"
          OnInvalidSubmit="@ShowError"
          OnValidSubmit="@AddMember">
    <DataAnnotationsValidator/>

    <MemberForm Member="@_newMember"/>

    <MudItem Class="d-flex flex-row justify-start"
             xs="12">
        <MudButton ButtonType="ButtonType.Submit"
                   Class="mt-8"
                   Color="Color.Primary"
                   DisableElevation="true"
                   Size="Size.Large"
                   Variant="Variant.Filled">
            Add member
        </MudButton>
    </MudItem>
</EditForm>

@code {

    private Models.MemberForm _newMember = new()
    {
        Country = "Belgium"
    };

    private async Task AddMember()
    {
        var command = _mapper.Map<AddMemberCommand>(_newMember);
        var response = await _mediator.Send(command);
        Snackbar.Clear();
        Snackbar.Add($"Member {_newMember.FirstName} {_newMember.LastName} added successfully!", Severity.Success);
        NavManager.NavigateTo("/members");
    }

    private void ShowError()
    {
        Snackbar.Clear();
        Snackbar.Add("Please correct all errors on the form", Severity.Error);
    }

}