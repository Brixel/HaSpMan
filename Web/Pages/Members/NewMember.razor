@page "/members/new"
@attribute [Authorize]

@using Commands
@using MediatR
@using AutoMapper
@inject IMediator _mediator
@inject IMapper _mapper
@inject ISnackbar Snackbar
@inject NavigationManager NavManager

<h1>Add new member</h1>

<EditForm Model="@_newMember" OnValidSubmit="@AddMember" OnInvalidSubmit="@ShowError">
   <DataAnnotationsValidator />

   <MemberForm Member="@_newMember" />

   <MudItem xs="12" Class="d-flex justify-center">
      <MudButton Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" Size="Size.Large" Class="mt-8"
         ButtonType="ButtonType.Submit">Add member</MudButton>
   </MudItem>
</EditForm>

@code {
   private Models.MemberForm _newMember = new();

   private async Task AddMember()
   {
      var command = _mapper.Map<AddMemberCommand>(_newMember);
      var response = await _mediator.Send(command);
      Snackbar.Clear();
      Snackbar.Add($"Member {_newMember.FirstName} {_newMember.LastName} added successfully!", Severity.Success);
      NavManager.NavigateTo("/members");
   }
   private void ShowError()
   {
      Snackbar.Clear();
      Snackbar.Add("Please correct all errors on the form", Severity.Error);
   }
}