@page "/members"
@attribute [Authorize]

@using MediatR
@using Queries.Members
@using Queries.Members.ViewModels

@inject IMediator _mediator


<MudTable ServerData="@(new Func<TableState, Task<TableData<MemberSummary>>>(ServerReload))" Dense="true" Hover="true"
   @ref="table">
   <ToolBarContent>
      <MudText Typo="Typo.h6">Members</MudText>
      <MudSpacer />
      <MudTextField T="string" ValueChanged="@(s=>OnSearch(s))" Placeholder="Search" Adornment="Adornment.Start"
         AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
      <MudSpacer />
      <MudButton Link="/members/new" Color="Color.Primary" DisableElevation="true" Variant="Variant.Filled"
         Size="Size.Small" Class="ma-2">Add member</MudButton>
   </ToolBarContent>
   <HeaderContent>
      <MudTh>
         <MudTableSortLabel SortLabel="name" T="MemberSummary">Name</MudTableSortLabel>
      </MudTh>
      <MudTh>
         <MudTableSortLabel SortLabel="address" T="MemberSummary">Address</MudTableSortLabel>
      </MudTh>
      <MudTh>
         <MudTableSortLabel SortLabel="email" T="MemberSummary">Email</MudTableSortLabel>
      </MudTh>
      <MudTh>
         <MudTableSortLabel SortLabel="phoneNumber" T="MemberSummary">Phone</MudTableSortLabel>
      </MudTh>
      <MudTh>
         Action
      </MudTh>
   </HeaderContent>
   <RowTemplate>
      <MudTd DataLabel="Name">@context.Name</MudTd>
      <MudTd DataLabel="Address">@context.Address</MudTd>
      <MudTd DataLabel="Email">@context.Email</MudTd>
      <MudTd DataLabel="PhoneNumber">@context.PhoneNumber</MudTd>
      <MudTd>
         <MudTooltip Text="Delete">
            <MudIconButton Link="@($"/members/{@context.Id}/edit")" Icon="@Icons.Material.Filled.Edit"
               aria-label="edit"></MudIconButton>
         </MudTooltip>
      </MudTd>
   </RowTemplate>
   <NoRecordsContent>
      <MudText>No matching records found</MudText>
   </NoRecordsContent>
   <LoadingContent>
      <MudText>Loading...</MudText>
   </LoadingContent>
   <PagerContent>
      <MudTablePager />
   </PagerContent>
</MudTable>

@code {
   private MudTable<MemberSummary>? table;
   private string searchString = "";
   private bool _isBusy = false;

   private async Task<TableData<MemberSummary>> ServerReload(TableState state)
   {
      // Workaround for https://github.com/Garderoben/MudBlazor/issues/2070
      if (_isBusy)
         return new TableData<MemberSummary>();

      _isBusy = true;

      MemberSummaryOrderOption orderBy = state.SortLabel switch
      {
         "name" => MemberSummaryOrderOption.Name,
         "address" => MemberSummaryOrderOption.Address,
         "email" => MemberSummaryOrderOption.Email,
         "phoneNumber" => MemberSummaryOrderOption.PhoneNumber,
         _ => MemberSummaryOrderOption.Name
      };
      var sortDirection = (Queries.Enums.SortDirection)(int)state.SortDirection;
      var query = new SearchMembersQuery(searchString, state.Page, state.PageSize, orderBy, sortDirection);
      var data = await _mediator.Send(query);

      _isBusy = false;
      return new TableData<MemberSummary>()
      {
         TotalItems = data.Total,
         Items = data.Items
      };
   }

   private void OnSearch(string text)
   {
      searchString = text;
      table?.ReloadServerData();
   }

}
