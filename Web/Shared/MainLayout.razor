@using System.Reflection
@using Microsoft.Extensions.Options
@using Configuration
@inherits LayoutComponentBase
@inject NavigationManager NavManager
@inject IOptions<OidcConfig> oidcOptions

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Color="Color.Inherit"
                       Edge="Edge.Start"
                       Icon="@Icons.Material.Filled.Menu"
                       OnClick="@((e) => DrawerToggle())" />
        <MudText Class="ml-3" Typo="Typo.h5">
            <a class="title" href="home">HaSpMan @_version</a>
        </MudText>
        <MudSpacer />
        <MudMenu Color="Color.Inherit" Icon="@Icons.Material.Filled.MoreVert">
            <AuthorizeView>
                <Authorized>
                    <MudMenuItem>
                        <MudLink Href="@GetLogoutUrl()">Logout</MudLink>
                    </MudMenuItem>
                </Authorized>
                <NotAuthorized>
                    <MudMenuItem>
                        <MudLink Href="Account/Login">Login</MudLink>
                    </MudMenuItem>
                </NotAuthorized>
            </AuthorizeView>
        </MudMenu>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen"
               ClipMode="DrawerClipMode.Always"
               Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
            <ErrorBoundary>
                <ChildContent>
                    @Body
                </ChildContent>
                <ErrorContent>
                    <GenericError></GenericError>
                </ErrorContent>
            </ErrorBoundary>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = true;

    private string _version
    {
        get
        {
            var assembly = Assembly.GetExecutingAssembly();
            var gitVersionInformationType = assembly.GetType("GitVersionInformation");
            var fullSemVerField = gitVersionInformationType?.GetField("FullSemVer");
            return fullSemVerField?.GetValue(null)?.ToString() ?? "0.0.0";
        }
    }

    private string GetLogoutUrl()
    {
        return $"{oidcOptions.Value.Authority}/protocol/openid-connect/logout?redirect_uri={NavManager.BaseUri}Account/Logout";
    }

    private void Logout()
    {
        NavManager.NavigateTo("/Account/Logout");
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

}